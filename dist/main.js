(()=>{"use strict";var n={772:(n,e,t)=>{t.d(e,{Z:()=>m});var o=t(537),r=t.n(o),i=t(645),a=t.n(i),A=t(667),s=t.n(A),c=new URL(t(520),t.b),l=new URL(t(68),t.b),d=a()(r()),u=s()(c),p=s()(l);d.push([n.id,`*{\n    box-sizing: border-box;\n    margin:0;\n    border:0;\n    \n}\n@font-face {\n    font-family: Lato;\n    src: url(${u});\n}\n@font-face {\n    font-family: Lato-light;\n    src: url(${p});\n}\nbody{\n    font-family: Lato;\n}\n.container{\n    height: 100vh;\n    \n    background-color: lightgrey;\n    padding:2rem;\n}\n.weather-container{\n   \n    width: 864px;\n    height: 642px;\n    margin: 0 auto;\n    background-color: white;\n    border-radius: 30px;\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    padding:2rem;\n    gap:1rem;\n    \n}\n.input-element{\n    display: flex;\n}\n\n.input-element img , .controls img{\n    width: 17px;\n    height: 17px;\n}\n.input-element-container{\n    display: flex;\n    flex-direction: column;\n    gap:3px;\n    align-items: center;\n}\ninput:focus{\n    outline: none;\n}\n.error{\n    color:red;\n    display: inline;\n    font-size: 0.8rem;\n}\n.sidebar{\n    display: flex;\n    flex-direction: column;\n    \n    \n}\n.sidebar .main .mainImg{\n    width:100%;\n    height: auto;\n    object-fit: cover;\n    object-position: 50% 50%;\n}\n.sidebar .main .mainDegree{\n    font-size: 4rem;\n}\ninput::placeholder{\n    font-family: Lato;\n    font-weight: 900;\n}\n.mainDegree .degree-div{\n    position: relative;\n}\n.main .mainDegree .degree-div .degree{\n    position: absolute;\n    font-size: 2rem;\n    font-weight: 900;\n    top:0;\n    left:0;\n}\n.main .mainDegree .degree-div .degreeType{\n    position: absolute;\n    font-size: 3rem;\n    top:0;\n    left:20px;\n    \n}\n.mainDegree{\n    display: flex;\n    gap:10px;\n    flex-direction: column;\n    \n}\n.mainDegree .text{\n    font-size: 1rem;\n}\n.number-container{\n    display: block;\n}\n.number-container.not-active{\ndisplay: none;\n}\n\n.main-container{\n    display: grid;\n    grid-template-rows: auto auto 1fr;\n    gap:2rem;\n    justify-items: flex-start;\n}\n.main-container .header .selection{\n    display: flex;\n    gap:1rem;\n    align-items: first baseline;\n    justify-content: flex-start;\n}\n.selected{\n    text-decoration: underline 1px solid;\n    text-underline-offset: 10px;\n    color:black;\n\n}\n.unselected{\n    color:#d3d3d3\n}\n.unselected:hover , .selected:hover{\n    color:black;\n    transform: scale(1.1);\n}\n.loading{\n    position: absolute;\n    left:0;\n    top:0;\n    width:100%;\n    height:100%;\n    background-color: black;\n    z-index: 1;\n    opacity: 1;\n    display: none;\n    \n}\n.loading.active{\n    \n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.carousel-container{\n    overflow: hidden;\n    width:534px;\n\n}\n.slide{\n    \n    justify-content: space-between;\n    flex-shrink: 0;\n    \n    \n\n}\n.slides{\n    display: flex;\n    color:white;\n    transition: transform 1s ease-in-out\n\n}\n.slides.turn-0{\n    transform: translateX(0);\n}\n.slides.turn-1{\n    transform: translateX(-534px);\n}\n.slides.turn-2{\n    transform: translateX(-1068px);\n}\n.slides div[class^=div]{\n    display: flex;\n    gap:10px;\n}\n.carousel{\n    display: flex;\n    flex-flow: column nowrap;\n    \n    align-items: center;\n}\n\n.points-container{\n    display: inline-flex;\n    gap:5px;\n    align-items: center;\n    position: relative;\n}\n\n.points:hover{\n    transform:scale(1.1)\n}\n.points{\n    width:15px;\n    height: 15px;\n    background-color:#d3d3d3;\n    border-radius: 15px ;\n}\n\n.moving-points{\n    position: absolute;\n    width:15px;\n    height: 15px;\n    border-radius: 15px;\n    background-color: black;\n    transition: transform 0.5s ease-in-out;\n}\n.moving-points.turn-0{\n    transform: translateX(0px);\n}\n.moving-points.turn-1{\n    transform: translateX(20px);\n}\n.moving-points.turn-0:hover{\n    transform: translateY(-20px);\n    \n}\n.moving-points.turn-1:hover{\n    transform: translate(20px , -20px);\n    \n    \n}\n.moving-points.turn-2:hover{\n    transform: translate(40px , -20px);\n    \n    \n}\n.moving-points.turn-2{\n    transform: translateX(40px);\n}\n\n\n.slide-content{\n   display: flex;\n   flex-direction: column;\n    color:black;\n}\n.slide-content img{\n    width:58px;\n    height: 58px;\n}\n\n.slide-content .degreeDiv{\n    position: relative;\n}\n.weather .degree{\n    position: absolute;\n    top: -5px;\n    left:0px;\n}\n.weather .degreeType{\n    position: absolute;\n    left:10px;\n}\ninput.invalid{\n    border-bottom: 1px solid red;\n}\n.city-container{\n    margin-top:2rem;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    \n}\n.cityName{\n    font-size: 2rem;\n    align-self: center;\n    position: relative;\n}\n.countryName{\n   position: absolute;\n   font-size: 1rem;\n   \n\n}\n.information-container{\n    display: grid;\n    grid-template:max-content max-content / 1fr 1fr;\n    width:100%;\n    gap:1rem;\n\n}\n.information-container img{\n    width:64px;\n    height: 64px;\n}\n.information-container .info-div{\nbackground-color: #e0e0e0;\nborder-radius: 10px;\npadding:1rem;\noverflow: hidden;\nheight: 80px;\nmax-height: 100px;\ntransition:max-height 1s ease-in-out ;\n}\n\n.information-container .info-div:hover{\n    max-height: 500px;\n    height: auto;\n    \n\n}`,"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,QAAQ;IACR,QAAQ;;AAEZ;AACA;IACI,iBAAiB;IACjB,4CAAgC;AACpC;AACA;IACI,uBAAuB;IACvB,4CAAiC;AACrC;AACA;IACI,iBAAiB;AACrB;AACA;IACI,aAAa;;IAEb,2BAA2B;IAC3B,YAAY;AAChB;AACA;;IAEI,YAAY;IACZ,aAAa;IACb,cAAc;IACd,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,8BAA8B;IAC9B,YAAY;IACZ,QAAQ;;AAEZ;AACA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,OAAO;IACP,mBAAmB;AACvB;AACA;IACI,aAAa;AACjB;AACA;IACI,SAAS;IACT,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,aAAa;IACb,sBAAsB;;;AAG1B;AACA;IACI,UAAU;IACV,YAAY;IACZ,iBAAiB;IACjB,wBAAwB;AAC5B;AACA;IACI,eAAe;AACnB;AACA;IACI,iBAAiB;IACjB,gBAAgB;AACpB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,gBAAgB;IAChB,KAAK;IACL,MAAM;AACV;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,KAAK;IACL,SAAS;;AAEb;AACA;IACI,aAAa;IACb,QAAQ;IACR,sBAAsB;;AAE1B;AACA;IACI,eAAe;AACnB;AACA;IACI,cAAc;AAClB;AACA;AACA,aAAa;AACb;;AAEA;IACI,aAAa;IACb,iCAAiC;IACjC,QAAQ;IACR,yBAAyB;AAC7B;AACA;IACI,aAAa;IACb,QAAQ;IACR,2BAA2B;IAC3B,2BAA2B;AAC/B;AACA;IACI,oCAAoC;IACpC,2BAA2B;IAC3B,WAAW;;AAEf;AACA;IACI;AACJ;AACA;IACI,WAAW;IACX,qBAAqB;AACzB;AACA;IACI,kBAAkB;IAClB,MAAM;IACN,KAAK;IACL,UAAU;IACV,WAAW;IACX,uBAAuB;IACvB,UAAU;IACV,UAAU;IACV,aAAa;;AAEjB;AACA;;IAEI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,gBAAgB;IAChB,WAAW;;AAEf;AACA;;IAEI,8BAA8B;IAC9B,cAAc;;;;AAIlB;AACA;IACI,aAAa;IACb,WAAW;IACX;;AAEJ;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,6BAA6B;AACjC;AACA;IACI,8BAA8B;AAClC;AACA;IACI,aAAa;IACb,QAAQ;AACZ;AACA;IACI,aAAa;IACb,wBAAwB;;IAExB,mBAAmB;AACvB;;AAEA;IACI,oBAAoB;IACpB,OAAO;IACP,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI;AACJ;AACA;IACI,UAAU;IACV,YAAY;IACZ,wBAAwB;IACxB,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,YAAY;IACZ,mBAAmB;IACnB,uBAAuB;IACvB,sCAAsC;AAC1C;AACA;IACI,0BAA0B;AAC9B;AACA;IACI,2BAA2B;AAC/B;AACA;IACI,4BAA4B;;AAEhC;AACA;IACI,kCAAkC;;;AAGtC;AACA;IACI,kCAAkC;;;AAGtC;AACA;IACI,2BAA2B;AAC/B;;;AAGA;GACG,aAAa;GACb,sBAAsB;IACrB,WAAW;AACf;AACA;IACI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,SAAS;IACT,QAAQ;AACZ;AACA;IACI,kBAAkB;IAClB,SAAS;AACb;AACA;IACI,4BAA4B;AAChC;AACA;IACI,eAAe;IACf,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,WAAW;;AAEf;AACA;IACI,eAAe;IACf,kBAAkB;IAClB,kBAAkB;AACtB;AACA;GACG,kBAAkB;GAClB,eAAe;;;AAGlB;AACA;IACI,aAAa;IACb,+CAA+C;IAC/C,UAAU;IACV,QAAQ;;AAEZ;AACA;IACI,UAAU;IACV,YAAY;AAChB;AACA;AACA,yBAAyB;AACzB,mBAAmB;AACnB,YAAY;AACZ,gBAAgB;AAChB,YAAY;AACZ,iBAAiB;AACjB,qCAAqC;AACrC;;AAEA;IACI,iBAAiB;IACjB,YAAY;;;AAGhB",sourcesContent:["*{\n    box-sizing: border-box;\n    margin:0;\n    border:0;\n    \n}\n@font-face {\n    font-family: Lato;\n    src: url(../fonts/Lato-Bold.ttf);\n}\n@font-face {\n    font-family: Lato-light;\n    src: url(../fonts/Lato-Light.ttf);\n}\nbody{\n    font-family: Lato;\n}\n.container{\n    height: 100vh;\n    \n    background-color: lightgrey;\n    padding:2rem;\n}\n.weather-container{\n   \n    width: 864px;\n    height: 642px;\n    margin: 0 auto;\n    background-color: white;\n    border-radius: 30px;\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    padding:2rem;\n    gap:1rem;\n    \n}\n.input-element{\n    display: flex;\n}\n\n.input-element img , .controls img{\n    width: 17px;\n    height: 17px;\n}\n.input-element-container{\n    display: flex;\n    flex-direction: column;\n    gap:3px;\n    align-items: center;\n}\ninput:focus{\n    outline: none;\n}\n.error{\n    color:red;\n    display: inline;\n    font-size: 0.8rem;\n}\n.sidebar{\n    display: flex;\n    flex-direction: column;\n    \n    \n}\n.sidebar .main .mainImg{\n    width:100%;\n    height: auto;\n    object-fit: cover;\n    object-position: 50% 50%;\n}\n.sidebar .main .mainDegree{\n    font-size: 4rem;\n}\ninput::placeholder{\n    font-family: Lato;\n    font-weight: 900;\n}\n.mainDegree .degree-div{\n    position: relative;\n}\n.main .mainDegree .degree-div .degree{\n    position: absolute;\n    font-size: 2rem;\n    font-weight: 900;\n    top:0;\n    left:0;\n}\n.main .mainDegree .degree-div .degreeType{\n    position: absolute;\n    font-size: 3rem;\n    top:0;\n    left:20px;\n    \n}\n.mainDegree{\n    display: flex;\n    gap:10px;\n    flex-direction: column;\n    \n}\n.mainDegree .text{\n    font-size: 1rem;\n}\n.number-container{\n    display: block;\n}\n.number-container.not-active{\ndisplay: none;\n}\n\n.main-container{\n    display: grid;\n    grid-template-rows: auto auto 1fr;\n    gap:2rem;\n    justify-items: flex-start;\n}\n.main-container .header .selection{\n    display: flex;\n    gap:1rem;\n    align-items: first baseline;\n    justify-content: flex-start;\n}\n.selected{\n    text-decoration: underline 1px solid;\n    text-underline-offset: 10px;\n    color:black;\n\n}\n.unselected{\n    color:#d3d3d3\n}\n.unselected:hover , .selected:hover{\n    color:black;\n    transform: scale(1.1);\n}\n.loading{\n    position: absolute;\n    left:0;\n    top:0;\n    width:100%;\n    height:100%;\n    background-color: black;\n    z-index: 1;\n    opacity: 1;\n    display: none;\n    \n}\n.loading.active{\n    \n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.carousel-container{\n    overflow: hidden;\n    width:534px;\n\n}\n.slide{\n    \n    justify-content: space-between;\n    flex-shrink: 0;\n    \n    \n\n}\n.slides{\n    display: flex;\n    color:white;\n    transition: transform 1s ease-in-out\n\n}\n.slides.turn-0{\n    transform: translateX(0);\n}\n.slides.turn-1{\n    transform: translateX(-534px);\n}\n.slides.turn-2{\n    transform: translateX(-1068px);\n}\n.slides div[class^=div]{\n    display: flex;\n    gap:10px;\n}\n.carousel{\n    display: flex;\n    flex-flow: column nowrap;\n    \n    align-items: center;\n}\n\n.points-container{\n    display: inline-flex;\n    gap:5px;\n    align-items: center;\n    position: relative;\n}\n\n.points:hover{\n    transform:scale(1.1)\n}\n.points{\n    width:15px;\n    height: 15px;\n    background-color:#d3d3d3;\n    border-radius: 15px ;\n}\n\n.moving-points{\n    position: absolute;\n    width:15px;\n    height: 15px;\n    border-radius: 15px;\n    background-color: black;\n    transition: transform 0.5s ease-in-out;\n}\n.moving-points.turn-0{\n    transform: translateX(0px);\n}\n.moving-points.turn-1{\n    transform: translateX(20px);\n}\n.moving-points.turn-0:hover{\n    transform: translateY(-20px);\n    \n}\n.moving-points.turn-1:hover{\n    transform: translate(20px , -20px);\n    \n    \n}\n.moving-points.turn-2:hover{\n    transform: translate(40px , -20px);\n    \n    \n}\n.moving-points.turn-2{\n    transform: translateX(40px);\n}\n\n\n.slide-content{\n   display: flex;\n   flex-direction: column;\n    color:black;\n}\n.slide-content img{\n    width:58px;\n    height: 58px;\n}\n\n.slide-content .degreeDiv{\n    position: relative;\n}\n.weather .degree{\n    position: absolute;\n    top: -5px;\n    left:0px;\n}\n.weather .degreeType{\n    position: absolute;\n    left:10px;\n}\ninput.invalid{\n    border-bottom: 1px solid red;\n}\n.city-container{\n    margin-top:2rem;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    \n}\n.cityName{\n    font-size: 2rem;\n    align-self: center;\n    position: relative;\n}\n.countryName{\n   position: absolute;\n   font-size: 1rem;\n   \n\n}\n.information-container{\n    display: grid;\n    grid-template:max-content max-content / 1fr 1fr;\n    width:100%;\n    gap:1rem;\n\n}\n.information-container img{\n    width:64px;\n    height: 64px;\n}\n.information-container .info-div{\nbackground-color: #e0e0e0;\nborder-radius: 10px;\npadding:1rem;\noverflow: hidden;\nheight: 80px;\nmax-height: 100px;\ntransition:max-height 1s ease-in-out ;\n}\n\n.information-container .info-div:hover{\n    max-height: 500px;\n    height: auto;\n    \n\n}"],sourceRoot:""}]);const m=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],A=0;A<n.length;A++){var s=n[A],c=o.base?s[0]+o.base:s[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var u=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=r(p,o);o.byIndex=A,e.splice(A,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var s=o(n,r),c=0;c<i.length;c++){var l=t(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},520:(n,e,t)=>{n.exports=t.p+"636be8de934918e38ed9.ttf"},68:(n,e,t)=>{n.exports=t.p+"c7400fcad9e48ca9043f.ttf"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!n;)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{async function n(n){const e=fetch(`https://api.weatherapi.com/v1/forecast.json?key=69861d6fcc6846d9b36141044231912&q=${n}&days=3`,{mode:"cors"});let[t]=await Promise.all([e]);return t=await t.json(),t}async function e(n){const e=["To live is the rarest thing in the world. Most people exist, that is all.","Be the change that you wish to see in the world.","Live as if you were to die tomorrow. Learn as if you were to live forever.","Great minds discuss ideas; average minds discuss events; small minds discuss people."];try{let e=await fetch(`https://api.api-ninjas.com/v1/quotes?category=${n}`,{mode:"cors",headers:{"X-Api-Key":"0RWXO/MPQBT+9dktLMOj+A==GcJczZHfstAyb7Ij"},contentType:"application/json"});return(await e.json())[0]}catch{return console.log(Math.floor(4*Math.random())),e[Math.floor(4*Math.random())]}}var o=t(379),r=t.n(o),i=t(795),a=t.n(i),A=t(569),s=t.n(A),c=t(565),l=t.n(c),d=t(216),u=t.n(d),p=t(589),m=t.n(p),f=t(772),C={};C.styleTagTransform=m(),C.setAttributes=l(),C.insert=s().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=u(),r()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals;const g=t.p+"b320a7170b1c8d5f7a1c.png",h=t.p+"5d1f85524c620acd6844.png",I=t.p+"eb44815637d770f7951c.gif",B=t.p+"f9a486806ae65c32be26.png",y=t.p+"33d636a93bd6a81dbc3a.png",x=t.p+"7242cf99966c386f0a58.png",v=t.p+"9b0412c0db733c79640d.png",b=t.p+"e4e72a0eb45f46d6df1b.png",w=t.p+"aaedf85f6f4d09fe94c3.png",S=document.querySelector(".main-container"),k=document.querySelector(".loading"),L=document.querySelector(".loadImg img"),q=document.querySelector(".sidebar");function E(n){q.querySelector(".main .mainImg").src=n}const j=q.querySelector(".main .mainDegree .number-container[class$=number]"),T=q.querySelector(".main .mainDegree .number-container[class$=min]"),U=q.querySelector(".main .mainDegree .number-container[class$=max]");function Y(n){const e=q.querySelector(".main .mainTime .day");let t=new Date(n);e.textContent=`${new Intl.DateTimeFormat("en-US",{weekday:"long",month:"long",day:"numeric"}).format(t)} `}function D(n){E(n.day.condition.icon.replace("64x64","128x128")),function(n,e,t="C"){T.classList.remove("not-active"),U.classList.remove("not-active"),j.classList.add("not-active");let o=U.querySelector(".number-max"),r=T.querySelector(".number-min");const i=T.querySelector(".degreeType"),a=U.querySelector(".degreeType");i.textContent=t,a.textContent=t,r.textContent=n,o.textContent=e}(n.day.mintemp_c,n.day.maxtemp_c),z(n.astro),Y(new Date(n.date))}function M(n){E(n.current.condition.icon.replace("64x64","128x128")),function(n,e="C"){const t=j.querySelector(".number");T.classList.add("not-active"),U.classList.add("not-active"),j.classList.remove("not-active"),j.querySelector(".degreeType").textContent=e,t.textContent=n}(n.current.temp_c),z(n.forecast.forecastday[0].astro),Y(new Date(n.current.last_updated)),console.log(n)}function z(n){const e=document.querySelector(".information-container .info-div:nth-of-type(1) .name"),t=document.querySelector(".information-container .info-div:nth-of-type(2) .name"),o=document.querySelector(".information-container .info-div:nth-of-type(3) .name"),r=document.querySelector(".information-container .info-div:nth-of-type(4) .name");e.textContent=n.sunrise,t.textContent=n.sunset,o.textContent=n.moonrise,r.textContent=n.moonset}function Q(){L.src=I,k.classList.add("active")}function $(){k.classList.remove("active")}function X(n,e,t,o){const r=document.querySelector(".moving-points");n>e-1?n=0:n<0&&(n=e-1);for(let n=0;n<e;n++)t.classList.remove(`turn-${n}`);for(let n=0;n<e;n++)o[n].classList.remove("selected");for(let n=0;n<e;n++)r.classList.remove(`turn-${n}`);return o[n].classList.add("selected"),t.classList.add(`turn-${n}`),r.classList.add(`turn-${n}`),n}function Z(n=0){const e=document.querySelectorAll(".points-container .points"),t=document.querySelector(".controls .next"),o=document.querySelector(".controls .back"),r=document.querySelector(".carousel-container .slides");let i=n;e[n].classList.add("selected");for(let n=0;n<e.length;n++)e[n].addEventListener("click",(()=>{i=n,X(n,e.length,r,e)}));t.addEventListener("click",(()=>{i=function(n,e,t,o){return X(n,e,t,o)}(i+1,e.length,r,e)})),o.addEventListener("click",(()=>{i=function(n,e,t,o){return X(n,e,t,o)}(i-1,e.length,r,e)}))}function W(n){const e=q.querySelector(".city-container"),t=e.querySelector(".name"),o=e.querySelector(".countryName");t.textContent=`${n.location.name},`,o.textContent=n.location.country}let G;S.querySelectorAll(".header .selection div");const P=document.querySelector(".search"),R=document.querySelector(".searchImg"),N=document.querySelector(".cancelImg"),O=document.querySelectorAll(".slides .slide"),V=document.querySelector(".input-element-container .error"),_=Array.from(S.querySelectorAll(".header .selection div")),K=document.querySelectorAll(".information-container .info-div .quote");function J(n){for(let e=0;e<n.forecast.forecastday.length;e++)_[e].addEventListener("click",(()=>{_.forEach((n=>{n.classList.add("unselected"),n.classList.remove("selected")})),_[e].classList.add("selected"),_[e].classList.remove("unselected"),0==e?M(n):D(n.forecast.forecastday[e]),H(O,n,e),Z()}))}function H(n,e,t=0,o="C"){for(let r=0;r<n.length;r++){Array.from(n[r].children).forEach((e=>{n[r].removeChild(e)})),n[r].appendChild(F());let i=n[r].querySelector("img"),a=n[r].querySelector(".hour"),A=n[r].querySelector(".weather .number");n[r].querySelector(".weather .degreeType").textContent=o;let s=new Date(e.forecast.forecastday[t].hour[r].time);s=`${String(s.getHours()).padStart(2,"0")}:${String(s.getMinutes()).padStart(2,"0")}`,i.src=e.forecast.forecastday[t].hour[r].condition.icon,a.textContent=s,A.textContent=e.forecast.forecastday[t].hour[r].temp_c}}function F(){let n=document.createElement("div");n.classList.add("slide-content");let e=document.createElement("img"),t=document.createElement("div");t.classList.add("hour");let o=document.createElement("div");o.classList.add("weather");let r=document.createElement("span");r.classList.add("number");let i=document.createElement("span");i.classList.add("degree"),i.textContent="o";let a=document.createElement("span");a.classList.add("degreeType");let A=document.createElement("span");return A.appendChild(i),A.appendChild(a),A.classList.add("degreeDiv"),o.appendChild(r),o.appendChild(A),n.appendChild(e),n.appendChild(t),n.appendChild(o),n}!async function(){Q(),function(){const n=document.querySelector(".searchImg"),e=document.querySelector(".cancelImg"),t=document.querySelector(".controls .back img"),o=document.querySelector(".controls .next img"),r=document.querySelector(".information-container img.sun-rise"),i=document.querySelector(".information-container img.sunset"),a=document.querySelector(".information-container img.moonrise"),A=document.querySelector(".information-container img.moonset");n.src=g,e.src=h,r.src=x,i.src=v,a.src=w,A.src=b,t.src=B,o.src=y}();try{const e=await new Promise(((n,e)=>{navigator.geolocation.getCurrentPosition((t=>{t.coords.accuracy>150&&e(0),n(`${t.coords.latitude},${t.coords.longitude}`)}),(function(){e(0)}),{enableHighAccuracy:!0,maximumAge:3e4,timeout:27e3})}));G=n(e)}catch{G=await n("paris")}J(G),M(G),await Promise.all([e("life"),e("life"),e("life"),e("life")]).then((n=>{for(let e=0;e<K.length;e++)K[e].textContent=n[e].quote})),W(G),Z(),H(O,G),$()}(),R.addEventListener("click",(async()=>{try{!function(n){if(0==n.value.length)throw new Error}(P)}catch(n){return V.textContent="Please don't leave this field empty!",void P.classList.add("invalid")}let e=P.value;Q();const t=await n(e);if(t.hasOwnProperty("error"))return V.textContent="Cannot find this location!",P.classList.add("invalid"),void $();P.classList.remove("invalid"),V.textContent="",_.forEach((n=>{n.classList.add("unselected"),n.classList.remove("selected")})),_[0].classList.add("selected"),_[0].classList.remove("unselected"),P.value="",J(t),M(t),H(O,t),W(t),renderQuote(),$()})),N.addEventListener("click",(()=>{P.value=""}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,